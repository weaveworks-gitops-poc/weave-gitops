on:
  schedule:
    - cron: '8 0 * * *'
  workflow_dispatch:

name: Nightly
jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Clean
      run: make clean
    - name: build
      run: make all BINARY_NAME=gitops-${{matrix.os}}-nightly
    - name: Store gitops binaries
      uses: actions/upload-artifact@v2
      with:
          name: gitops-binaries-${{matrix.os}}-nightly
          path: bin
          retention-days: 1
  test-eks:
    needs: [build]
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: checkout
      uses: actions/checkout@v2
    - name: setup aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Install eksctl
      run: |
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin
        eksctl get clusters
    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v1
      with:
          version: 'v1.19.6'
    - name: setup eks cluster
      run: |
        OS_NAME=$(echo "${{matrix.os}}" | tr '[:upper:]' '[:lower:]')
        export CLUSTER_NAME=wego-nightly-cluster-$OS_NAME
        export CLUSTER_VERSION=1.19
        export CLUSTER_REGION=us-east-1
        export CLUSTER_EXISTS=$(eksctl get clusters --region $CLUSTER_REGION | grep -i $CLUSTER_NAME)
        if [ -z $CLUSTER_EXISTS ]
        then
          eksctl create cluster --name=$CLUSTER_NAME --version=$CLUSTER_VERSION --region=$CLUSTER_REGION
        fi
        eksctl utils write-kubeconfig --region=$CLUSTER_REGION --cluster=$CLUSTER_NAME --kubeconfig=$HOME/.kube/config
        kubectl config rename-context $(kubectl config current-context) test-eks-$OS_NAME
        ls -la $HOME/.kube
        kubectl get nodes -A
        kubectl get all --all-namespaces -o wide
      if: always()
    - name: Fake Install flux
      run: mkdir -p pkg/flux/bin && touch pkg/flux/bin/flux
    - name: Download gitops binaries
      uses: actions/download-artifact@v2
      with:
        name: gitops-binaries-${{matrix.os}}-nightly
        path: bin
    - name: Change bin permissions
      run: |
        chmod +x bin/gitops-${{matrix.os}}-nightly
        ls -la bin
    - name: Set up ssh agent
      uses: webfactory/ssh-agent@v0.5.2
      with:
        ssh-private-key: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}
    - name: Configure git settings
      run: |
        git config --global init.defaultBranch main
        git config --global user.email "test-user@weave.works"
        git config --global user.name "Testy McTestFace"
        git config --global url.ssh://git@github.com/.insteadOf https://github.com/
    - name: Install Ginkgo binary
      run: go get github.com/onsi/ginkgo/ginkgo
    - name: User Acceptance Tests (${{matrix.os}})
      env:
        GITHUB_ORG: weaveworks-gitops-test
        GITHUB_TOKEN: "${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}"
        GITHUB_KEY: "${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}"
        GITLAB_ORG: weaveworks
        GITLAB_SUBGROUP: weabe-gitops
        GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      run: |
        export WEGO_BIN_PATH=$(pwd)/bin/gitops-${{matrix.os}}-nightly
        export CLUSTER_PROVIDER=kubectl
        export DELETE_WEGO_RUNTIME_ON_EACH_TEST=true
        export K8S_VERSION=1.19.1
        # cleanup the cluster
        $WEGO_BIN_PATH flux uninstall --silent
        $WEGO_BIN_PATH flux uninstall --namespace test-namespace --silent
        kubectl get all --all-namespaces -o wide
        ginkgo --reportFile=$(pwd)/test-results/acceptance-test-results.xml -v ./test/acceptance/test/...
      if: always()
  test-gke:
    needs: [build]
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: checkout
      uses: actions/checkout@v2
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    - name: Use gcloud CLI
      run: |
        gcloud info
        gcloud container clusters list
    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v1
      with:
          version: 'v1.19.6'
    - name: setup gke cluster
      run: |
        OS_NAME=$(echo "${{matrix.os}}" | tr '[:upper:]' '[:lower:]')
        export CLUSTER_NAME=wego-nightly-cluster-$OS_NAME
        export CLUSTER_VERSION=1.19
        export CLUSTER_REGION=us-central1-a
        export CLUSTER_EXISTS=$(gcloud container clusters list | grep -i $CLUSTER_NAME)
        if [ -z $CLUSTER_EXISTS ]
        then
          gcloud container clusters create $CLUSTER_NAME --cluster-version=$CLUSTER_VERSION --zone $CLUSTER_REGION
        fi
        gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_REGION
        kubectl config rename-context $(kubectl config current-context) test-gke-$OS_NAME
        ls -la $HOME/.kube
        kubectl get nodes -A
        kubectl get all --all-namespaces -o wide
      if: always()
    - name: Fake Install flux
      run: mkdir -p pkg/flux/bin && touch pkg/flux/bin/flux
    - name: Download gitops binaries
      uses: actions/download-artifact@v2
      with:
        name: gitops-binaries-${{matrix.os}}-nightly
        path: bin
    - name: Change bin permissions
      run: |
        chmod +x bin/gitops-${{matrix.os}}-nightly
        ls -la bin
    - name: Set up ssh agent
      uses: webfactory/ssh-agent@v0.5.2
      with:
        ssh-private-key: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}
    - name: Configure git settings
      run: |
        git config --global init.defaultBranch main
        git config --global user.email "test-user@weave.works"
        git config --global user.name "Testy McTestFace"
        git config --global url.ssh://git@github.com/.insteadOf https://github.com/
    - name: Install Ginkgo binary
      run: go get github.com/onsi/ginkgo/ginkgo
    - name: User Acceptance Tests (${{matrix.os}})
      env:
        GITHUB_ORG: weaveworks-gitops-test
        GITHUB_TOKEN: "${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}"
        GITHUB_KEY: "${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_SSH_KEY }}"
        GITLAB_ORG: weaveworks
        GITLAB_SUBGROUP: weabe-gitops
        GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      run: |
        export WEGO_BIN_PATH=$(pwd)/bin/gitops-${{matrix.os}}-nightly
        export CLUSTER_PROVIDER=kubectl
        export DELETE_WEGO_RUNTIME_ON_EACH_TEST=true
        export K8S_VERSION=1.19.1
        # cleanup the cluster
        $WEGO_BIN_PATH flux uninstall --silent
        $WEGO_BIN_PATH flux uninstall --namespace test-namespace --silent
        kubectl get all --all-namespaces -o wide
        ginkgo --reportFile=$(pwd)/test-results/acceptance-test-results.xml -v ./test/acceptance/test/...
      if: always()
  publish:
    if: success()
    needs: [test-eks, test-gke]
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - name: Download tested gitops binaries
      uses: actions/download-artifact@v2
      with:
        name: gitops-binaries-${{matrix.os}}-nightly
        path: bin
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: publish nightly binaries to s3
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - run: |
        aws s3 cp bin/gitops-${{matrix.os}}-nightly s3://weave-gitops/nightly/${{ steps.date.outputs.date }}/gitops-${{matrix.os}}
